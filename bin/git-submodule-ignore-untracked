#!/bin/sh
#
# $File: ${DOTDIR}/bin/git-submodule-ignore-untracked
# $Date: 2011-09-20T15:06:23+0900$
# vim:filetype=zsh:tabstop=2:shiftwidth=2:fdm=marker:

! which git >/dev/null 2>&1 && exit 1

CMD=
is_file=false

submodule_ignore_untracked() {
  [ $# -eq 0 ] && exit 1
  while [ $# -gt 0 ];
  do
    path=`git config --file .gitmodules --get submodule.$1.path`
    if [ -n "$path" ]; then
      if $is_file ; then
        git config --file .gitmodules submodule.$1.ignore untracked
        git add .gitmodules
      else
        git config submodule.$1.ignore untracked
      fi
      [ -n "$CMD" ] && eval `echo $CMD`
    else
      echo "Error: No available submodule $1" >&2
      exit 2
    fi
    shift
  done
}

getopt() {
  if [ $# -ne 0 ]; then
    while getopts hcf OPT
    do
      case $OPT in
        h)
          help break ;;
        c)
          option_c ;;
        f)
          option_f ;;
      esac
    done
  else
    help
  fi
}

help() {
  echo "Usage: `basename $0` [OPTION] {submodule name1} [{submodule name2}] ..."
  echo "Option:"
  echo "  -c, --commit                  and commit -m 'Added ignore=untracked submodule {submodule name}'"
  echo "  -f, --file                    'ignore=untracked' write .gitmodule"
  exit
}

option_invalid(){
  echo "illegal option -- ${1##*-}" >&2
}

option_c() {
  CMD+="git commit -m 'Added ignore=untracked submodule \$1'"
}

option_f() {
  is_file=true
}

main() {
  if [ $# -ne 0 ]; then
    while [ $# -gt 0 ];
    do
      case $1 in
        --help)
          help break ;;
        --commit)
          option_c ;;
        --file)
          option_f ;;
        --*)
          option_invalid ;;
        -*)
          getopt $1 ;;
        *)
          break 2 ;;
      esac
      shift
    done
    [ -n "$1" ] && submodule_ignore_untracked $@
  else
    help
  fi
}

main "$@"

unset CMD is_file
